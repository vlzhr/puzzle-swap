{"version":3,"sources":["SignerHandler.tsx","AuthInterface.tsx","SwapInterface.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["signerWeb","signer","this","Signer","NODE_URL","setProvider","ProviderWeb","signerEmail","ProviderCloud","ModalWindow","props","txData","useState","modal","setModal","toggle","onClick","Modal","isOpen","className","ModalHeader","ModalBody","Button","color","size","login","window","WavesKeeper","signAndPublishTransaction","type","data","contractAddress","function","args","tokenOut","pmt","then","tx","store","addNotification","title","message","insert","container","animationIn","animationOut","dismiss","duration","onScreen","console","log","catch","error","JSON","stringify","exchangeWithKeeper","SwapInterface","state","Map","amountIn","a","setInterval","downloadState","s","setState","axios","get","dataMap","forEach","kv","set","key","value","t1","t2","Math","round","tokenIds","tokenDecimals","tokenIn","BalanceIn","amountOut","tokenShares","e","floatVal","parseFloat","target","isNaN","classNames","calculateCurrentPrice","onChange","handleInput","placeholder","tokenNames","getTokenIn","calculateAmountOut","assetId","tokens","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35492e7d.chunk.js","sourcesContent":["import { Signer } from '@waves/signer';\nimport { ProviderWeb } from '@waves.exchange/provider-web';\nimport {ProviderCloud} from \"@waves.exchange/provider-cloud\";\n\n\nexport class SignerWebHandler {\n    public signer: any;\n\n    constructor() {\n        this.signer = new Signer({\n            NODE_URL: 'https://nodes.wavesnodes.com'\n        });\n        this.signer.setProvider(new ProviderWeb('https://waves.exchange/signer/'));\n    }\n}\n\nexport class SignerEmailHandler {\n    public signer: any;\n\n    constructor() {\n        this.signer = new Signer();\n        this.signer.setProvider(new ProviderCloud());\n    }\n}\n\n\nexport const signerWeb = new SignerWebHandler();\nexport const signerEmail = new SignerEmailHandler();\n\n","/* eslint react/no-multi-comp: 0, react/prop-types: 0 */\n\nimport React, { useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-notifications-component/dist/theme.css'\nimport {signerEmail, signerWeb} from \"./SignerHandler\";\nimport {contractAddress} from \"./App\";\nimport ReactNotification from 'react-notifications-component'\nimport { store } from 'react-notifications-component';\n\n\nfunction exchangeWithKeeper(txData: any) {\n    return window.WavesKeeper.signAndPublishTransaction({\n        type: 16,\n        data: {\n            \"fee\": {\n                \"tokens\": \"0.05\",\n                \"assetId\": \"WAVES\"\n            },\n            \"dApp\": contractAddress,\n            \"call\": {\n                function: 'swap',\n                args: [\n                    {\n                        \"type\": \"string\",\n                        \"value\": txData.tokenOut\n                    },\n                    {\n                        \"type\": \"integer\",\n                        \"value\": 0\n                    }]\n            }, \"payment\": [txData.pmt]\n        }\n    }).then((tx: any) => {\n        store.addNotification({\n            title: \"Congratulations!\",\n            message: \"You successfully performed an exchange.\",\n                // \"<a target='_blank' href='https://wavesexplorer.com/transaction/\"+tx.id+\"}'>Swap transaction.</a>\",\n            type: \"success\",\n            insert: \"top\",\n            container: \"top-right\",\n            animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n            animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n            dismiss: {duration: 5000, onScreen: true}\n        });\n        console.log(tx)\n    }).catch((error: any) => {\n        store.addNotification({\n            title: \"Error while completing exchange!\",\n            message: JSON.stringify(error),\n            type: \"danger\",\n            insert: \"top\",\n            container: \"top-right\",\n            animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n            animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n            dismiss: {duration: 5000, onScreen: true}\n        });\n        console.log(error)\n    });\n}\n\nconst ModalWindow = (props: any) => {\n    let buttonLabel = \"Exchange\";\n    let className = \"modal-window\";\n    const txData = props.txData;\n\n    const [modal, setModal] = useState(false);\n\n    const toggle = () => setModal(!modal);\n\n    return (\n        <div>\n            <button onClick={toggle}>{buttonLabel}</button>\n            <Modal isOpen={modal} toggle={toggle} className={className+\" mt-5\"}>\n                <ModalHeader toggle={toggle}>Authorize with your Waves wallet</ModalHeader>\n                <ModalBody className=\"text-center\">\n    <div><Button className=\"mt-4 mb-2\" color=\"success\" size=\"lg\"\n                 onClick={() => signerEmail.signer.login()}>Waves Exchange Email</Button></div>\n    <div><Button className=\"mb-2\" color=\"success\" size=\"lg\"\n                 onClick={() => signerWeb.signer.login()}>Waves Exchange Seed</Button></div>\n    <div><Button className=\"mb-5\" color=\"success\" size=\"lg\"\n                 onClick={() => exchangeWithKeeper(txData).then(toggle)}>Waves Keeper</Button></div>\n                </ModalBody>\n            </Modal>\n        </div>\n);\n}\n\nexport default ModalWindow;","import React from \"react\";\nimport axios from 'axios';\nimport {tokenDecimals, tokenIds, tokenNames, tokenShares} from \"./App\";\nimport classNames from \"classnames\";\nimport ModalWindow from \"./AuthInterface\";\nexport const API_URL = 'https://wavesducks.wavesnodes.com'\n\ninterface IState{\n    data: Map<any, any>;\n    tokenOut: number;\n    amountIn: number;\n}\n\ninterface IProps{}\n\nexport interface IContractStateKey{\n    key: string;\n    value: number | boolean | string;\n    type: 'integer' | 'string' | 'boolean';\n}\n\nexport class SwapInterface extends React.Component<IProps, IState>{\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            data: new Map<any, any>(),\n            tokenOut: 0,\n            amountIn: 0\n        }\n    }\n\n    async componentDidMount() {\n        setInterval(async () => {\n            const s = await this.downloadState()\n            this.setState({\n                data: s\n            })\n        }, 1000);\n    }\n\n    async downloadState(){\n        const data: Array<IContractStateKey> = (await axios.get(`${API_URL}/addresses/data/3PL3TvgimsLFWs3xW4kpVmvRf3c8HX7JMS7`)).data;\n        const dataMap = new Map();\n        data.forEach((kv) => {\n            dataMap.set(kv.key, kv.value);\n        });\n        return dataMap\n    }\n\n    calculateCurrentPrice(t1: number, t2: number){\n        return  Math.round(10000 * (this.state.data.get(\"global_\"+[tokenIds[t1]]+\"_balance\") / 0.5 / tokenDecimals[t1]) /\n                (this.state.data.get(\"global_\"+[tokenIds[t2]]+\"_balance\") / 0.5 / tokenDecimals[t2])) / 10000;\n    }\n\n    calculateAmountOut(){\n        const tokenOut = this.state.tokenOut\n        const tokenIn = this.state.tokenOut === 0 ? 1 : 0;\n        const BalanceIn = this.state.data.get(\"global_\"+[tokenIds[tokenIn]]+\"_balance\")\n        const BalanceOut = this.state.data.get(\"global_\"+[tokenIds[tokenOut]]+\"_balance\")\n\n        const amountOut = BalanceOut / tokenDecimals[tokenOut] *\n            (1 - (BalanceIn / (BalanceIn + tokenDecimals[tokenIn] * this.state.amountIn))\n            ** (tokenShares[tokenIn] / tokenShares[tokenOut]))\n        return Math.round(amountOut * tokenDecimals[tokenOut]) / tokenDecimals[tokenOut]\n    }\n\n    getTokenIn() {\n        return this.state.tokenOut === 0 ? 1 : 0\n    }\n\n    handleInput(e: any) {\n        const floatVal = parseFloat(e.target.value);\n        const value = !isNaN(floatVal) ? floatVal : 0;\n        this.setState({\n            amountIn: value\n        });\n    }\n\n    render(){\n        return <div className=\"swap-window\">\n            <div className=\"choose\">\n                <div className={classNames(\"choose-option\", {\"chosen\": this.state.tokenOut === 0})} onClick={() => this.setState({tokenOut: 0})}>\n                    USDN to STREET: {this.calculateCurrentPrice(0, 1)}</div>\n                <div className={classNames(\"choose-option\", {\"chosen\": this.state.tokenOut === 1})} onClick={() => this.setState({tokenOut: 1})}>\n                    STREET to USDN: {this.calculateCurrentPrice(1, 0)}</div>\n            </div>\n            <div>\n                <input onChange={(e) => this.handleInput(e)} type=\"text\" placeholder={tokenNames[this.getTokenIn()]+\" amount\"}/>\n                <div>You will receive {this.calculateAmountOut()} {tokenNames[this.state.tokenOut]}</div>\n                {/*<button onClick={() => this.swap()}>Exchange</button>*/}\n                <ModalWindow txData={\n                    {\n                        pmt: {assetId: tokenIds[this.getTokenIn()], tokens: this.state.amountIn},\n                        tokenOut: tokenIds[this.state.tokenOut]\n                    }\n                }/>\n            </div>\n        </div>\n    }\n}","import React from 'react';\nimport './App.css';\nimport {ExampleClass} from \"./ExampleClass\";\nimport {SwapInterface} from \"./SwapInterface\";\nimport ReactNotification from \"react-notifications-component\";\n\nexport const tokenIds = [\n    \"CE5cxMvz7865CyFZPFUmDiL4KRkYXP6b6oYgN3vmWdV5\",\n    \"DG2xFkPdDwKUoBkzGAhQtLpSGzfXLiCYPEzeKH2Ad24p\"\n]\nexport const tokenNames = [\n    \"STREET\",\n    \"USDN\"\n]\nexport const tokenShares = [\n    0.5,\n    0.5\n]\nexport const tokenDecimals = [\n    10**8,\n    10**6\n]\nexport const contractAddress = \"3PL3TvgimsLFWs3xW4kpVmvRf3c8HX7JMS7\"\n\ndeclare global {\n    interface Window {\n        // add you custom properties and methods\n        WavesKeeper: any\n    }\n}\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <header>\n            <div><span className=\"logo\">🧩</span>&nbsp;&nbsp;<span>Puzzle Swap</span></div>\n        </header>\n        <ReactNotification className=\"notificationWindow\"/>\n        {/*<ExampleClass helloWord=\"Привет\" clickHandler={() => signer.invoke()} />*/}\n        <SwapInterface />\n\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}